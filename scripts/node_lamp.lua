if not v then v = {} endlocal POWER_ON = 1local POWER_SWITCH = 0v.light = 0v.needinit = truev.scale = 1v.power = 0v.switch = 0local function turnOn()    if v.light == 0 then        v.light = createQuad("softglow-add", 13)        quad_setBlendType(v.light, BLEND_ADD)        local s1 = v.scale * 0.85        local s2 = v.scale * 1.15        quad_scale(v.light, s1, s1)        quad_scale(v.light, s2, s2, 1.2, -1, 1)    endendlocal function turnOff()    if v.light ~= 0 then        quad_delete(v.light, 2)        v.light = 0    endendfunction init(me)    local mode = node_getContent(me)    local s = node_getAmount(me)        v.switch = node_getNearestNode(me, "switch")        -- handle case "lamp 5" as well as "lamp on 5"    if s == 0 and mode and mode ~= "" then        s = tonumber(mode)        mode = "on"    end        if mode == "on" then        v.power = POWER_ON    else        v.power = POWER_SWITCH        if v.switch == 0 then            debugLog("ERROR: node_lamp: no switch found!")        end    end        v.scale = sendfunction update(me, dt)    if v.needinit then        v.needinit = false        if v.power == POWER_ON then            turnOn()        end    end    if v.power == POWER_SWITCH and v.switch ~= 0 then        if v.light == 0 and node_getFlag(v.switch) ~= 0 then            turnOn()        elseif v.light ~= 0 and node_getFlag(v.switch) == 0 then            turnOff()        end    end            if v.light ~= 0 then        local x, y = node_getPosition(me)        quad_setPosition(v.light, x, y)    endendfunction songNote(me, note)endfunction songNoteDone(me, note, done)end