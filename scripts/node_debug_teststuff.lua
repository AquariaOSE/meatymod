v.needinit = truev.txt = ""v.q = 0v.on = truev.r = 0function init(me)    v.txt = node_getName(me)    node_setCursorActivation(me, v.on)        v.r = prandom.new(42)endfunction update(me, dt)    if v.on then        if v.needinit then            v.needinit = false            v.q = createQuad("fish")            quad_scale(v.q, 2.5, 2.5)            quad_scale(v.q, 5, 5, 0.8, -1, 1)            quad_rotate(v.q, 360, 3, -1)        end                local x, y = node_getPosition(me)        quad_setPosition(v.q, x, y)    endendfunction activate(me)    --local s = v.r._state    --local n = v.r:next()    --setControlHint(string.format("Random: %f (state: %f)", n, s), 0, 0, 0, 5)        --setControlHint(string.format("Random: %f", v.r:random(5)), 0, 0, 0, 5)        local r = v.r    local n        for i = 1, 100000 do        n = r()        if n < 0 or n >= 1 then            errorLog("oops0: " .. n)            break        end    end        for i = 1, 100000 do        n = r(5)        if n < 1 or n > 5 then            errorLog("oops1: " .. n)            break        end    end        for i = 1, 100000 do        n = r(120, 555)        if n < 120 or n > 555 then            errorLog("oops2: " .. n)            break        end    end            setControlHint(string.format("Random: %f", n), 0, 0, 0, 5)endfunction songNote(me, note)endfunction songNoteDone(me, note, done)end